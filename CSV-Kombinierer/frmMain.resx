<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAAB3AAB0AAB0AAB6AACAAACAAACA
        AACAAACAAACAAACAAAB8AAB0AAB0AAB0AAB6AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAAB0AADQRQDqXwDtYgC0NAB6AACAAACAAACAAACAAACAAAB8AACXDQDvZADnXADu
        ZAC5OQB6AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAAB9AACRJRT/+HH/7Gj/
        /3TCNgB4AACAAACAAACAAACAAACAAABrAAD301z/8Gr/7Wn//G+DBAF+AACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAAB8AACZMhn//5D//4T//5TAMAB4AACAAACAAACAAACAAAB1AAC/
        XR3//5H//4T//4/AhUV2AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAAB8
        AACYMBj//4z//4D//5DAMAB4AACAAACAAACAAAB9AACHAAD//47//4H//4P48XlrAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAAB8AACYMBj//4z//4D//5DAMAB4AACAAACA
        AACAAABpAAD422P//4b//4D//5OHDgd9AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAAB8AACYMBj//4z//4D//5DAMAB4AACAAACAAABuAADXdR3//5D//4D//4fWrVdzAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAAB8AACYMBj//4z//4D/
        /5C8LABwAAB4AABrAAC/Rwf//4z//4H//4H//49zAAB/AACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAAB8AACYMBj//4z//4D//5DfSAC7NAC6LwDzbwD//4P//4P//4H/
        /5iHGBF5AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAAB8
        AACYMBj//4z//4D//4j/uzj/xT7/2FH//4j//4P//4H//4D4fQTSRQB/AAB7AACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAAB8AACYMBj//4z//4D//4D//4j//4j//4b/
        /4H//4D//4D//4T/8nL/sSv/fwCJCQB9AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAAB8AACYMBj//4z//4D//4D//4j//4j//4j//4j//4j//4f//4L//4P//5D/3FjsXwBy
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAAB8AACYMBj//4z//4D/
        /4jflzi7e0C/f0C/f0C+fT/Fi0b+/X///4b//4D//5L/qBaEAAB+AACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAAB8AACYMBj//4z//4D//5C8JABwAAB4AAB4AAB4AAB3AABmAADn
        z2j//4T//4b/41iaEAB8AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAAB8
        AACYMBj//4z//4D//5C8LABwAAB4AAB4AAB4AAB4AABuAAC0bDj//4j//4T/9WqcEAB8AACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAAB8AACYMBj//4z//4D//5DfSAC7NAC/OAC/
        OAC/OAC9NgDPNgD/9Wj//4T//4T/921tAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAAB8AACYMBj//4z//4D//4j/uzj/x0D/x0D/x0D/x0D/wTr//4D//4b//4D//4u/dzd4
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAAB8AACYMBj//4z//4D/
        /4D//4j//4j//4j//4j//4j//4j//4L//4D//4X//4R2AAB/AACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAAB8AACaNBr//5T//4j//4j//4j//4j//4j//4j//4j//4j//4r/
        /5D48XmJEgl8AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAAB+
        AACMGAzFi0a/f0C/f0C/f0C/f0C/f0C/f0C/f0DBg0KsWS2NGw5wAAB9AACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAAB+AAB4AAB4AAB4AAB4AAB4AAB4AAB4
        AAB4AAB4AAB6AAB9AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACAAACA
        AACAAACAAACAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>